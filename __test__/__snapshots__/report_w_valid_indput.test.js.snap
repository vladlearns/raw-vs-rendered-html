// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rawVsRendered produces correct output 1`] = `
"<html>
    <head>
      <style>
        body {
          font-family: Arial, sans-serif;
        }

        table {
          width: 100%;
          border-collapse: collapse;
          table-layout: fixed;
          word-wrap: break-word;
        }

        td, th {
          border: 1px solid #dddddd;
          text-align: left;
          padding: 8px;
          inline-size: 150px;
          word-break: break-all;
        }

        .added {
          background-color: #ddffdd;
          word-break: break-all;
        }

        .removed {
          background-color: #ffdddd;
          word-break: break-all;
        }

        #next {
          position: fixed;
          bottom: 10%;
          left: 80px;
          font-size: xx-large;
          margin-right: 10px;
          margin-top: calc(100vh + var(--offset));
          text-decoration: none;
          padding: 10px;
          font-family: sans-serif;
          color: #fff;
          background: #000;
          border-radius: 100px;
          white-space: nowrap;
          user-select: none;
        }

        #prev {
          position: fixed;
          bottom: 10%;
          left: 160px;
          font-size: xx-large;
          margin-right: 10px;
          margin-top: calc(100vh + var(--offset));
          text-decoration: none;
          padding: 10px;
          font-family: sans-serif;
          color: #fff;
          background: #000;
          border-radius: 100px;
          white-space: nowrap;
          user-select: none;
        }
        .text-button {
          font-family: "Open Sans", sans-serif;
          font-size: 16px;
          letter-spacing: 2px;
          text-align: center;
          text-decoration: none;
          text-transform: uppercase;
          color: #000;
          cursor: pointer;
          border: 3px solid;
          padding: 0.25em 0.5em;
          margin: 10px;
          box-shadow: 1px 1px 0px 0px, 2px 2px 0px 0px, 3px 3px 0px 0px, 4px 4px 0px 0px, 5px 5px 0px 0px;
          position: relative;
          user-select: none;
          -webkit-user-select: none;
          touch-action: manipulation;
        }

        .text-button:active {
          box-shadow: 0px 0px 0px 0px;
          top: 5px;
          left: 5px;
        }

        @media (min-width: 768px) {
          .text-button {
            padding: 0.25em 0.75em;
          }
        }
        .top {
          --offset: 50px;
          left: 80px;
          position: sticky;
          bottom: 20px;
          margin-right: 10px;
          place-self: end;
          margin-top: calc(100vh + var(--offset));
          text-decoration: none;
          padding: 10px;
          font-family: sans-serif;
          color: #fff;
          background: #000;
          border-radius: 100px;
          white-space: nowrap;
        }

        #line-count {
            position: relative;
            left: 85%;
            font-family: sans-serif;
          }

              </style>
            </head>
            <body>
              <table>
                <tr>
                  <th class="num-raw" style="width: 50px">#</th>
                  <th>Raw HTML</th>
                  <th>Rendered HTML</th>
                </tr>
    <tr class="">
        <td style="width: 50px">0</td>
        <td >&lt;!</td>
        <td>&lt;!</td>
      </tr><tr class="removed">
        <td style="width: 50px">1</td>
        <td >&lt;span class="removed"&gt;--- doctype
&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="added">
        <td style="width: 50px">2</td>
        <td ></td>
        <td>&lt;span class="added"&gt;++++ DOCTYPE&lt;/span&gt;</td>
      </tr><tr class="">
        <td style="width: 50px">3</td>
        <td > html&gt;</td>
        <td> html&gt;</td>
      </tr><tr class="removed">
        <td style="width: 50px">4</td>
        <td >&lt;span class="removed"&gt;--- 

&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="">
        <td style="width: 50px">5</td>
        <td >&lt;html&gt;</td>
        <td>&lt;html&gt;</td>
      </tr><tr class="removed">
        <td style="width: 50px">6</td>
        <td >&lt;span class="removed"&gt;--- 

&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="">
        <td style="width: 50px">7</td>
        <td >&lt;head&gt;
    &lt;title&gt;Example Domain&lt;/title&gt;

    &lt;meta charset="utf-8"</td>
        <td>&lt;head&gt;
    &lt;title&gt;Example Domain&lt;/title&gt;

    &lt;meta charset="utf-8"</td>
      </tr><tr class="removed">
        <td style="width: 50px">8</td>
        <td >&lt;span class="removed"&gt;---  /
&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="">
        <td style="width: 50px">9</td>
        <td >&gt;
    &lt;meta http-equiv="Content-type" content="text/html; charset=utf-8"</td>
        <td>&gt;
    &lt;meta http-equiv="Content-type" content="text/html; charset=utf-8"</td>
      </tr><tr class="removed">
        <td style="width: 50px">10</td>
        <td >&lt;span class="removed"&gt;---  /
&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="">
        <td style="width: 50px">11</td>
        <td >&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"</td>
        <td>&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1"</td>
      </tr><tr class="removed">
        <td style="width: 50px">12</td>
        <td >&lt;span class="removed"&gt;---  /
&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="">
        <td style="width: 50px">13</td>
        <td >&gt;
    &lt;style type="text/css"&gt;
    body {
        background-color: #f0f0f2;
        margin: 0;
        padding: 0;
        font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        
    }
    div {
        width: 600px;
        margin: 5em auto;
        padding: 2em;
        background-color: #fdfdff;
        border-radius: 0.5em;
        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);
    }
    a:link, a:visited {
        color: #38488f;
        text-decoration: none;
    }
    @media (max-width: 700px) {
        div {
            margin: 0 auto;
            width: auto;
        }
    }
    &lt;/style&gt;    
&lt;/head&gt;

&lt;body&gt;
&lt;div&gt;
    &lt;h1&gt;Example Domain&lt;/h1&gt;
    &lt;p&gt;This domain is for use in illustrative examples in documents. You may use this
    domain in literature without prior coordination or asking for permission.&lt;/p&gt;
    &lt;p&gt;&lt;a href="https://www.iana.org/domains/example"&gt;More information...&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</td>
        <td>&gt;
    &lt;style type="text/css"&gt;
    body {
        background-color: #f0f0f2;
        margin: 0;
        padding: 0;
        font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        
    }
    div {
        width: 600px;
        margin: 5em auto;
        padding: 2em;
        background-color: #fdfdff;
        border-radius: 0.5em;
        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);
    }
    a:link, a:visited {
        color: #38488f;
        text-decoration: none;
    }
    @media (max-width: 700px) {
        div {
            margin: 0 auto;
            width: auto;
        }
    }
    &lt;/style&gt;    
&lt;/head&gt;

&lt;body&gt;
&lt;div&gt;
    &lt;h1&gt;Example Domain&lt;/h1&gt;
    &lt;p&gt;This domain is for use in illustrative examples in documents. You may use this
    domain in literature without prior coordination or asking for permission.&lt;/p&gt;
    &lt;p&gt;&lt;a href="https://www.iana.org/domains/example"&gt;More information...&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</td>
      </tr><tr class="added">
        <td style="width: 50px">14</td>
        <td ></td>
        <td>&lt;span class="added"&gt;++++ 

&lt;/span&gt;</td>
      </tr><tr class="">
        <td style="width: 50px">15</td>
        <td >&lt;/body&gt;</td>
        <td>&lt;/body&gt;</td>
      </tr><tr class="removed">
        <td style="width: 50px">16</td>
        <td >&lt;span class="removed"&gt;--- 

&lt;/span&gt;</td>
        <td></td>
      </tr><tr class="">
        <td style="width: 50px">17</td>
        <td >&lt;/html&gt;</td>
        <td>&lt;/html&gt;</td>
      </tr><tr class="removed">
        <td style="width: 50px">18</td>
        <td >&lt;span class="removed"&gt;--- 

&lt;/span&gt;</td>
        <td></td>
      </tr><div>
  <div id="show-all" class="text-button" role="button">Show All</div>
  <div id="show-diff" class="text-button" role="button">Show Diff</div>
</div>
 <div id="line-count">
    Added: <span id="num-added">2</span> | Removed: <span id="num-removed">8</span>
</div>
<table>
<tr>
    </table>
    </body>
    <div>
  <div id="prev">&#8593;</div>
  <div id="next">&#8595;</div>
</div>
<a href="#" class="top">Back to Top &#8593;</a>

    <script>

  const prevButton = document.getElementById("prev");
  const nextButton = document.getElementById("next");
  const rows = document.querySelectorAll("tr");

  // Set the current row to null initially
  let currentRow = null;

  // Add click event listener for the prev button
  prevButton.addEventListener("click", function () {
    // If the current row is not set, set it to the first row
    if (!currentRow) {
      currentRow = rows[0];
      currentRow.style.backgroundColor = "yellow";
      currentRow.scrollIntoView({behavior:"smooth"});
      return;
    }

    // If the current row is the first row, do nothing
    if (currentRow === rows[0]) {
      return;
    }

    // Otherwise, set the current row to the previous row and scroll to it
    currentRow.style.backgroundColor = "white";
    currentRow = currentRow.previousElementSibling;
    currentRow.style.backgroundColor = "yellow";
    currentRow.scrollIntoView({behavior:"smooth"});
  });

  nextButton.addEventListener("click", function () {
    // If the current row is not set, set it to the first row
    if (!currentRow) {
      currentRow = rows[0];
      currentRow.style.backgroundColor = "yellow";
      currentRow.scrollIntoView({behavior:"smooth"});
      return;
    }

    // If the current row is the last row, do nothing
    if (currentRow === rows[rows.length - 1]) {
      return;
    }

    // Otherwise, set the current row to the next row and scroll to it
    currentRow.style.backgroundColor = "white";
    currentRow = currentRow.nextElementSibling;
    currentRow.style.backgroundColor = "yellow";
    currentRow.scrollIntoView({behavior:"smooth"});
  });

  const showAllButton = document.getElementById("show-all");
  const showDiffButton = document.getElementById("show-diff");

  showAllButton.addEventListener("click", function () {
    // Show all rows
    rows.forEach((row) => {
      row.style.display = "table-row";
    });
  });

  showDiffButton.addEventListener("click", function () {
    // Hide all rows that are not added or removed
    rows.forEach((row) => {
      if (!row.classList.contains("added") && !row.classList.contains("removed")) {
        row.style.display = "none";
      }
    });
  });
</script>
</html>"
`;
